{
    "project": {
        "name": "Ully CLI",
        "description": "Ully CLI: Manage your favorite links easily and quickly",
        "version": "0.6.0",
        "url": "https://github.com/ullyin/ully"
    },
    "files": {
        "lib/helpers.js": {
            "name": "lib/helpers.js",
            "modules": {},
            "classes": {
                "Helpers": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/ully.js": {
            "name": "lib/ully.js",
            "modules": {},
            "classes": {
                "Ully": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "Helpers": {
            "name": "Helpers",
            "shortname": "Helpers",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "lib/helpers.js",
            "line": 17
        },
        "Ully": {
            "name": "Ully",
            "shortname": "Ully",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "lib/ully.js",
            "line": 26,
            "is_constructor": 1,
            "example": [
                "\n\n    var api = new Ully('AccessToken');"
            ],
            "params": [
                {
                    "name": "AccessToken",
                    "description": "Access Token",
                    "type": "String"
                }
            ]
        }
    },
    "classitems": [
        {
            "file": "lib/helpers.js",
            "line": 29,
            "description": "Method responsible for check if path exists",
            "example": [
                "\n\n    helpers.exists('./ully');"
            ],
            "itemtype": "method",
            "name": "exists",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "path",
                    "description": "File path of archive",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns true if file exists",
                "type": "String"
            },
            "class": "Helpers"
        },
        {
            "file": "lib/helpers.js",
            "line": 46,
            "description": "Method responsible for reading files and get content",
            "example": [
                "\n\n    helpers.read('./ully');"
            ],
            "itemtype": "method",
            "name": "read",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "fillepath",
                    "description": "File path of archive",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns file content",
                "type": "String"
            },
            "class": "Helpers"
        },
        {
            "file": "lib/helpers.js",
            "line": 64,
            "description": "Method responsible for writing files",
            "example": [
                "\n\n    helpers.write('./ully', 'string data');"
            ],
            "itemtype": "method",
            "name": "write",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "fillepath",
                    "description": "File path of archive",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "Data of file",
                    "type": "String"
                }
            ],
            "class": "Helpers"
        },
        {
            "file": "lib/helpers.js",
            "line": 82,
            "description": "Method responsible for demove files",
            "example": [
                "\n\n    helpers.remove('./ully');"
            ],
            "itemtype": "method",
            "name": "remove",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "path",
                    "description": "File path of archive",
                    "type": "String"
                }
            ],
            "class": "Helpers"
        },
        {
            "file": "lib/helpers.js",
            "line": 98,
            "description": "Method responsible for demove directories",
            "example": [
                "\n\n    helpers.rm('./ully');"
            ],
            "itemtype": "method",
            "name": "rm",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "path",
                    "description": "File path of directory",
                    "type": "String"
                }
            ],
            "class": "Helpers"
        },
        {
            "file": "lib/helpers.js",
            "line": 124,
            "description": "Method responsible for check if path is a file",
            "example": [
                "\n\n    helpers.isFile('./ully');"
            ],
            "itemtype": "method",
            "name": "isFile",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "path",
                    "description": "File path of archive",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns true if path is file",
                "type": "String"
            },
            "class": "Helpers"
        },
        {
            "file": "lib/helpers.js",
            "line": 142,
            "description": "Method responsible for check if path is a directory",
            "example": [
                "\n\n    helpers.isDir('./ully');"
            ],
            "itemtype": "method",
            "name": "isDir",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "path",
                    "description": "File path of archive",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns true if path is directory",
                "type": "String"
            },
            "class": "Helpers"
        },
        {
            "file": "lib/ully.js",
            "line": 86,
            "description": "Method responsible for asking questions",
            "example": [
                "\n\n    api.prompt(prompts, callback);"
            ],
            "itemtype": "method",
            "name": "prompt",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "prompts",
                    "description": "Array of prompt options",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "A callback",
                    "type": "Function"
                }
            ],
            "class": "Ully"
        },
        {
            "file": "lib/ully.js",
            "line": 105,
            "description": "Method responsible for login in accounts",
            "example": [
                "\n\n    api.login('accessToken', function(err, data) {\n         console.log(data);\n    });"
            ],
            "itemtype": "method",
            "name": "login",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "AccessToken",
                    "description": "A Access Token",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "A callback with api response",
                    "type": "Function"
                }
            ],
            "class": "Ully"
        },
        {
            "file": "lib/ully.js",
            "line": 136,
            "description": "Method responsible for showing stats of Ully",
            "example": [
                "\n\n    api.stats(function(err, data) {\n         console.log(data);\n    });"
            ],
            "itemtype": "method",
            "name": "stats",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "callback",
                    "description": "A callback with api response",
                    "type": "Function"
                }
            ],
            "class": "Ully"
        },
        {
            "file": "lib/ully.js",
            "line": 162,
            "description": "Method responsible for showing the status of api",
            "example": [
                "\n\n    api.status(function(err, data) {\n         console.log(data);\n    });"
            ],
            "itemtype": "method",
            "name": "status",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "callback",
                    "description": "A callback with api response",
                    "type": "Function"
                }
            ],
            "class": "Ully"
        },
        {
            "file": "lib/ully.js",
            "line": 188,
            "description": "Method responsible for showing profile info",
            "example": [
                "\n\n    api.account(function(err, data) {\n         console.log(data);\n    });"
            ],
            "itemtype": "method",
            "name": "account",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "callback",
                    "description": "A callback with api response",
                    "type": "Function"
                }
            ],
            "class": "Ully"
        },
        {
            "file": "lib/ully.js",
            "line": 214,
            "description": "Method responsible for list all collections",
            "example": [
                "\n\n    api.collections(function(err, data) {\n         console.log(data);\n    });"
            ],
            "itemtype": "method",
            "name": "collections",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "callback",
                    "description": "A callback with api response",
                    "type": "Function"
                }
            ],
            "class": "Ully"
        },
        {
            "file": "lib/ully.js",
            "line": 243,
            "description": "Method responsible for generate a dinamic list of collections",
            "example": [
                "\n\n    api.listCollections();"
            ],
            "itemtype": "method",
            "name": "listCollections",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "callback",
                    "description": "A callback",
                    "type": "Function"
                }
            ],
            "class": "Ully"
        },
        {
            "file": "lib/ully.js",
            "line": 273,
            "description": "Method responsible for create a new collection",
            "example": [
                "\n\n    api.createCollection('name', 'slug', 'public', function(err, data) {\n         console.log(data);\n    });"
            ],
            "itemtype": "method",
            "name": "createCollection",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "name",
                    "description": "Name",
                    "type": "String"
                },
                {
                    "name": "slug",
                    "description": "Slug",
                    "type": "String"
                },
                {
                    "name": "publicCollection",
                    "description": "Public Collection",
                    "type": "Boolean"
                },
                {
                    "name": "callback",
                    "description": "A callback with api response",
                    "type": "Function"
                }
            ],
            "class": "Ully"
        },
        {
            "file": "lib/ully.js",
            "line": 306,
            "description": "Method responsible for create a new url",
            "example": [
                "\n\n    api.addUrl('collectionSlug', 'url', 'title', 'description', function(err, data) {\n         console.log(data);\n    });"
            ],
            "itemtype": "method",
            "name": "addUrl",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "collectionSlug",
                    "description": "Collection Slug",
                    "type": "String"
                },
                {
                    "name": "url",
                    "description": "Url",
                    "type": "String"
                },
                {
                    "name": "title",
                    "description": "Title",
                    "type": "String"
                },
                {
                    "name": "description",
                    "description": "Description of url",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "A callback with api response",
                    "type": "Function"
                }
            ],
            "class": "Ully"
        },
        {
            "file": "lib/ully.js",
            "line": 341,
            "description": "Method responsible for list all shortened urls",
            "example": [
                "\n\n    api.shortenedUrls(function(err, data) {\n         console.log(data);\n    });"
            ],
            "itemtype": "method",
            "name": "shortenedUrls",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "callback",
                    "description": "A callback with api response",
                    "type": "Function"
                }
            ],
            "class": "Ully"
        },
        {
            "file": "lib/ully.js",
            "line": 367,
            "description": "Method responsible for generate a dinamic list of shortened urls",
            "example": [
                "\n\n    api.listShortenedUrls();"
            ],
            "itemtype": "method",
            "name": "listShortenedUrls",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "callback",
                    "description": "A callback",
                    "type": "Function"
                }
            ],
            "class": "Ully"
        },
        {
            "file": "lib/ully.js",
            "line": 397,
            "description": "Method responsible for shorten urls",
            "example": [
                "\n\n    api.shortenUrl('url', 'shortcode', 'password', function(err, data) {\n         console.log(data);\n    });"
            ],
            "itemtype": "method",
            "name": "shortenUrl",
            "access": "public",
            "tagname": "",
            "params": [
                {
                    "name": "url",
                    "description": "Url to shorten",
                    "type": "String"
                },
                {
                    "name": "shortcode",
                    "description": "A custom shortcode (optional)",
                    "type": "String"
                },
                {
                    "name": "password",
                    "description": "A password to protect this url (optional)",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "A callback with api response",
                    "type": "Function"
                }
            ],
            "class": "Ully"
        }
    ],
    "warnings": []
}